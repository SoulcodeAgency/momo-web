name: PR

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  pull_request:

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Deployment
        uses: octokit/request-action@v2.x
        id: create_deployment
        with:
          route: POST /repos/${{ github.repository }}/deployments
          ref: ${{ github.sha }}
          environment: Preview
          required_contexts: '[]'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOYMENT_OUTPUT=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "deployment_output=$DEPLOYMENT_OUTPUT" >> $GITHUB_OUTPUT

      - name: Get current time
        id: get-time
        run: |
          formatted_time="$(TZ=Europe/Zurich date '+%Y-%m-%d %H:%M')"
          echo "current_time=${formatted_time}" >> $GITHUB_OUTPUT

      - name: 'On success: Post Deployment URL to PR'
        if: steps.deploy.outcome == 'success'
        uses: thollander/actions-comment-pull-request@v3.0.1
        with:
          comment-tag: deployment-url
          message: |
            ✅ Preview deployed @ ${{ steps.get-time.outputs.current_time }}
            🚀 ${{ steps.deploy.outputs.deployment_output }}

      - name: 'On Failure: Post failed message'
        if: steps.deploy.outcome == 'failure'
        uses: thollander/actions-comment-pull-request@v3.0.1
        with:
          comment-tag: deployment-url
          message: |
            ❌ Preview deployment failed @ ${{ steps.get-time.outputs.current_time }}
            🚀 ${{ steps.deploy.outputs.deployment_output }}

      - name: Update Deployment Status to Success
        if: steps.deploy.outcome == 'success'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ fromJson(steps.create_deployment.outputs.data).id }}/statuses
          token: ${{ secrets.GITHUB_TOKEN }}
          state: success
          log_url: ${{ steps.deploy.outputs.deployment_output }}

      - name: Update Deployment Status to Failure
        if: steps.deploy.outcome == 'failure'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ fromJson(steps.create_deployment.outputs.data).id }}/statuses
          state: failure
          token: ${{ secrets.GITHUB_TOKEN }}
